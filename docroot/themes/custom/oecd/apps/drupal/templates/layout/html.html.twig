{#
/**
 * @file
 * Theme override for the basic structure of a single Drupal page.
 *
 * Variables:
 * - logged_in: A flag indicating if user is logged in.
 * - root_path: The root path of the current page (e.g., node, admin, user).
 * - node_type: The content type for the current node, if the page is a node.
 * - head_title: List of text elements that make up the head_title variable.
 *   May contain one or more of the following:
 *   - title: The title of the page.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site.
 * - page_top: Initial rendered markup. This should be printed before 'page'.
 * - page: The rendered page markup.
 * - page_bottom: Closing rendered markup. This variable should be printed after
 *   'page'.
 * - db_offline: A flag indicating if the database is offline.
 * - placeholder_token: The token for generating head, css, js and js-bottom
 *   placeholders.
 *
 * @see template_preprocess_html()
 */
#}
{%
  set body_classes = [
    logged_in ? 'user-logged-in',
    not root_path ? 'path-frontpage' : 'path-' ~ root_path|clean_class,
    node_type ? 'page-node-type-' ~ node_type|clean_class,
    db_offline ? 'db-offline',
    page.sidebar_first ? 'sidebar-first',
    page.sidebar_second ? 'sidebar-second'
  ]
%}

<!DOCTYPE html>
<html{{ html_attributes }}>
  <head>
    <head-placeholder token="{{ placeholder_token|raw }}">
    <title>{{ head_title|safe_join(' | ') }}</title>
    {# Linked critical CSS #}
    <link rel="preload" type="text/css" href="{{ base_path ~ directory }}/css/critical.css" as="style" onload="this.onload=null;this.rel='stylesheet'" />
    <noscript>
      <link rel="stylesheet" type="text/css" href="{{ base_path ~ directory }}/css/critical.css">
    </noscript>
    <css-placeholder token="{{ placeholder_token|raw }}">
    {# Service worker file loaded #}
    <script type='text/javascript'>
      try {
        window.addEventListener('load', async () => {
          try {
            await navigator.serviceWorker.register('../../../../../../../sw.js');
            console.log('Service worker registered successfully');
          } catch (error) {
            console.error(`Service worker registration failed with ${error}`);
          }
        });
      } catch (error) {
        console.error(`Registration failed with ${error}`);
      }
    </script>
  </head>
  <body{{ attributes.addClass(body_classes) }}>
    {#
      Keyboard navigation/accessibility link to main content section in
      page.html.twig.
    #}
    <a href="#main-content" class="visually-hidden focusable skip-link">
      {{ 'Skip to main content'|t }}
    </a>
    {{ page_top }}
    {{ page }}
    {{ page_bottom }}
    <js-placeholder token="{{ placeholder_token|raw }}">
    <js-bottom-placeholder token="{{ placeholder_token|raw }}">
  </body>
</html>
